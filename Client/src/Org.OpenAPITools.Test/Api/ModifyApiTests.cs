/*
 * Range-Based Set Synchronization Framework
 *
 * This is a simple Framework to synchronize range-based sets.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: u.kuehn@tu-berlin.de
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ModifyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ModifyApiTests : IDisposable
    {
        private ModifyApi instance;

        public ModifyApiTests()
        {
            instance = new ModifyApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModifyApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ModifyApi
            //Assert.IsType<ModifyApi>(instance);
        }

        /// <summary>
        /// Test DeletePost
        /// </summary>
        [Fact]
        public void DeletePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject4? inlineObject4 = null;
            //instance.DeletePost(inlineObject4);
        }

        /// <summary>
        /// Test InsertPost
        /// </summary>
        [Fact]
        public void InsertPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject2? inlineObject2 = null;
            //instance.InsertPost(inlineObject2);
        }

        /// <summary>
        /// Test UpdatePost
        /// </summary>
        [Fact]
        public void UpdatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InlineObject3? inlineObject3 = null;
            //instance.UpdatePost(inlineObject3);
        }
    }
}
