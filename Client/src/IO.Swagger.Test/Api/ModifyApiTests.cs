/* 
 * Range-Based Set Synchronization Framework
 *
 * This is a simple Framework to synchronize range-based sets.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: u.kuehn@tu-berlin.de
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ModifyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ModifyApiTests
    {
        private ModifyApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ModifyApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ModifyApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ModifyApi
            //Assert.IsInstanceOfType(typeof(ModifyApi), instance, "instance is a ModifyApi");
        }

        /// <summary>
        /// Test DeletePost
        /// </summary>
        [Test]
        public void DeletePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteBody body = null;
            //instance.DeletePost(body);
            
        }
        /// <summary>
        /// Test InsertPost
        /// </summary>
        [Test]
        public void InsertPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InsertBody body = null;
            //instance.InsertPost(body);
            
        }
        /// <summary>
        /// Test UpdatePost
        /// </summary>
        [Test]
        public void UpdatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateBody body = null;
            //instance.UpdatePost(body);
            
        }
    }

}
