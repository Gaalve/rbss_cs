/*
 * Range-Based Set Synchronization Framework
 *
 * This is a simple Framework to synchronize range-based sets.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: u.kuehn@tu-berlin.de
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Models.RBSS_CS;
using Org.OpenAPIToolsServer.Attributes;

namespace Org.OpenAPIToolsServer.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class PeerNetworkApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Exit peer network and communicate new successor, the former predecessor must then notify its new successor of its new predeccessor</remarks>
        /// <param name="successor"></param>
        /// <response code="200">Returns acceptance of new successor</response>
        [HttpPost]
        [Route("/exit")]
        [Consumes("application/json")]
        [ValidateModelState]
        public abstract IActionResult ExitPost([FromBody]Successor successor);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Request to join the peer to peer network</remarks>
        /// <param name="joining"></param>
        /// <response code="200">Accept join by sending IP of new successor, the joining peer must then notify its new successor of its new predeccessor</response>
        [HttpPost]
        [Route("/join")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Successor))]
        public abstract IActionResult JoinPost([FromBody]Joining joining);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Communicate new predeccessor</remarks>
        /// <param name="predecessor"></param>
        /// <response code="200">Returns acceptance of new predecessor</response>
        [HttpPost]
        [Route("/notify")]
        [Consumes("application/json")]
        [ValidateModelState]
        public abstract IActionResult NotifyPost([FromBody]Predecessor predecessor);
    }
}
